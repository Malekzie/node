// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  password    String
  theme       String        @default("luxury")
  UserProfile UserProfile[]
  Spells      SpellBook[]   @relation("UserSpells")
}

model Session {
  id String @id @default(cuid())
  expiresAt DateTime
  sessionData String

  @@index([expiresAt], name: "expiresAt")
}

model UserProfile {
  id        String  @id @default(cuid())
  firstName String?
  lastName  String?
  address   String?
  phone     String?
  city      String?
  province  String?
  postal    String?
  userId    String
  user      User    @relation(fields: [userId], references: [id])
}

model Agents {
  id        String      @id @default(cuid())
  image     String?
  name      String
  position  String
  email     String
  phone     String
  address   String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Spells    SpellBook[] @relation("AgentSpells")
}

model SpellBook {
  id          Int      @id @default(autoincrement())
  image       String?
  title       String
  description String
  powerLevel  Int
  element     String
  author      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId  String?
  user    User?   @relation("UserSpells", fields: [userId], references: [id], onDelete: Cascade)
  agentId String?
  agent   Agents? @relation("AgentSpells", fields: [agentId], references: [id], onDelete: Cascade)
}
